workspace = 1,monitor:eDP-1
workspace = 2,monitor:eDP-1
workspace = 3,monitor:eDP-1
workspace = 4,monitor:eDP-1
workspace = 5,monitor:eDP-1
workspace = 6,monitor:eDP-1
workspace = 7,monitor:eDP-1
workspace = 8,monitor:eDP-1
workspace = 9,monitor:eDP-1
workspace = 10,monitor:eDP-1

###################
### MY PROGRAMS ###
###################
# $themes = bash ~/Documents/themes/theme-switcher.sh
$terminal = kitty
$fileManager = nautilus --new-window # launch Nautilus (file manager)
$menu = rofi -show drun
$menu_emoji = rofi -modi emoji -show emoji -kb-secondary-copy "" -kb-custom-1 Ctrl+c --selector-args "-theme ~/.config/rofi/launchers/type-1/style-13.rasi" 
#$powermenu = zsh ~/.config/rofi/powermenu.sh
#$screenshot = hyprshot -m region -m active --clipboard-only
$hyprlock = hyprlock
$killpanel = killall waybar
$startpanel = waybar



###################
### KEYBINDINGS ###
###################
$mainMod = SUPER 

# bind = alt, C, exec, $themes
bind = $mainMod, Q, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit
bind = $mainMod, F, fullscreen
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, $menu
bind = $mainMod SHIFT, R, exec, $menu_emoji 
# bind = alt, Z, exec, $powermenu
bind = $mainMod, S, togglesplit,
bind = $mainMod, L, exec, $hyprlock
bind = $mainMod, K, exec, $killpanel
bind = $mainMod, J, exec, $startpanel
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
#bind = $mainMod, 10, workspace, 10
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 10, movetoworkspace, 10
# bind = $mainMod, mouse_down, workspace, e+1
# bind = $mainMod, mouse_up, workspace, e-1
bindm = $mainMod, mouse:272, movewindow # 鼠标左键拖动窗口
bindm = $mainMod, mouse:273, resizewindow # 鼠标右键修改窗口
# 增大音量并发送通知
bindel = ,XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5% && notify-send -e -u low -h string:x-canonical-private-synchronous:volume_notif -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | awk '/Volume:/{print $5}' | tr -d '%') "🔊 Volume: $(pactl get-sink-volume @DEFAULT_SINK@ | awk '/Volume:/{print $5}')" 
# 减小音量并发送通知
bindel = ,XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5% && notify-send -e -u low -h string:x-canonical-private-synchronous:volume_notif -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | awk '/Volume:/{print $5}' | tr -d '%') "🔇 Volume: $(pactl get-sink-volume @DEFAULT_SINK@ | awk '/Volume:/{print $5}')"
# 切换静音并发送通知
bindel = ,XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle && [ "$(pactl get-sink-mute @DEFAULT_SINK@ | awk '/Mute:/{print $2}')" = "yes" ] && notify-send -e -u normal -h string:x-canonical-private-synchronous:volume_notif -h int:value:0 "🔇 静音" "音量已静音" || notify-send -e -u normal -h string:x-canonical-private-synchronous:volume_notif -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | awk '/Volume:/{print $5}' | tr -d '%') "🔊 音量" "音量已取消静音"
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# 打开一个浮动窗口、大小为1280x800、位置为中心的 kitty 终端
bind = $mainMod, Return, exec, kitty --class floatterm

# 设置floatterm为浮动并指定大小和位置
windowrulev2 = float, class:^(floatterm)$
windowrulev2 = size 1280 800, class:^(floatterm)$ 
windowrulev2 = center, class:^(floatterm)$
# --class floatterm 给这个kitty 实例起个类名 floatterm 
# windowrulev2 用于匹配该窗口并设置行为

# 切换壁纸和配色快捷键 (使用fish中的alias)
bind = $mainMod SHIFT, W, exec, fish -c "sw_paper"

# 打开剪贴板
#bind = $mainMod SHIFT, V, exec, "~/Public/scripts/cliphist/cliphist.sh"
bind = $mainMod SHIFT, V, exec, fish -c "clip"
# Screenshot 保存在~/Pictures/ScreenShots目录下
bind = $mainMod SHIFT, S, exec, slurp | grim -g - ~/Pictures/ScreenShots/$(date +'screenshot_%Y-%m-%d-%H%M%S.png') && notify-send -a -u low "Screenshot" "Screenshot Saved" 
